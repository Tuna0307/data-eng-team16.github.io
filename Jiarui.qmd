---
title: "Jiarui"
format: html
---

```{r}
# ── Multi‐Line Plot: Median HDB Resale Price by Flat Type with % Change ──────────
library(plotly)
library(tidyverse)
library(scales)
library(RColorBrewer)   # for nicer qualitative palettes

# 1. Load & prepare
spark_df <- read_csv("data_output/summary_by_type_year.csv") %>%
  mutate(flat_type = factor(flat_type)) %>%   # ensure consistent order
  arrange(flat_type, year)

# 2. Compute percent change 2020→2024 per flat type
pct_df <- spark_df %>%
  filter(year %in% c(2020, 2024)) %>%
  select(flat_type, year, median_price) %>%
  pivot_wider(names_from = year, values_from = median_price, names_prefix = "yr_") %>%
  mutate(pct_change = 100 * (yr_2024 / yr_2020 - 1))

# 3. Attach pct_change back to full data for hover
spark_df2 <- spark_df %>%
  left_join(pct_df %>% select(flat_type, pct_change), by = "flat_type")

# 4. Define a distinct color palette
flat_types <- levels(spark_df2$flat_type)
pal <- brewer.pal(n = length(flat_types), name = "Set2")

# 5. Build the plot with % change in hover
fig <- spark_df2 %>%
  plot_ly(
    x = ~year,
    y = ~median_price,
    color = ~flat_type,
    colors = pal,
    legendgroup = ~flat_type,
    type = "scatter",
    mode = "lines+markers",
    customdata = ~pct_change,
    hovertemplate = paste0(
      "<b>% Price Change</b><br>",
      "Year %{x}: $%{y:,.0f}<br>",
      "since 2020: %{customdata:.1f}%<extra></extra>"
    ),
    showlegend = TRUE
  )
  layout(
    title = "Median HDB Resale Price by Flat Type (2020–2024)",
    xaxis = list(
      title = "Year",
      tickmode = "array",
      tickvals = unique(spark_df2$year),
      showgrid = FALSE
    ),
    yaxis = list(
      title = "Median Price (SGD)",
      tickprefix = "$",
      tickformat = ",.0f",
      showgrid = TRUE
    ),
    legend = list(
      title = list(text = "Flat Type"),
      orientation = "h",
      x = 0.1,
      y = -0.2
    ),
    margin = list(l = 80, r = 40, t = 60, b = 60),
    height = 500
  ) %>%
  config(displayModeBar = FALSE)

# 6. Add % change annotations at 2024 endpoints
annotations <- pct_df %>%
  mutate(
    label = paste0("+", round(pct_change, 1), "%"),
    x = 2024,
    y = yr_2024
  ) %>%
  select(flat_type, x, y, label) %>%
  pmap(function(flat_type, x, y, label) {
    list(
      x = x + 0.1,
      y = y,
      xref = "x",
      yref = "y",
      text = label,
      showarrow = FALSE,
      font = list(size = 11, color = pal[which(flat_types == flat_type)]),
      xanchor = "left",
      yanchor = "middle"
    )
  })

fig <- fig %>% layout(annotations = annotations)

# 7. Render
fig



```